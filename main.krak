import sdl2
import io
import gl
import vector
import window
import keylistener
import shader
import fileio
//import string
import object

fun main() : int {
   
   /*
    var fp : FILE* = fileio::fopen("settings.txt","r")
    var s1 = string::string("abc").toCharArray()
    var s2 = string::string("0123456789").toCharArray()
    var readCount = fileio::fscanf(fp, "%s %s", s1, s2)

    io::println(s1)
    io::println(s2)
    */

    var winName : char* = "SQUID PONG"
    var win : window::gameWindow
    var res : int = win.create(640, 480, winName)
    
    gl::glewinit()

    var listener : keylistener::keylistener
    var done : int = 0
    
    var s : shader::shader
    s.compile()
    s.enable()
    
    var f1 : float = 0.0
    var f2 : float = 1.0
    var f3 : float = 0.5

    var triVerts.construct() : vector::vector<float>
    triVerts.addEnd(-f2)
    triVerts.addEnd(f1)
    triVerts.addEnd(-f2+f3)
    triVerts.addEnd(f1)
    triVerts.addEnd(-f2+f3)
    triVerts.addEnd(f3)
   
    var paddle1 : object::gameObject
    paddle1.construct(&s)
    paddle1.setPos(triVerts)
    paddle1.setColor(f2,f1,f1)
    
    triVerts.data[0] = f2
    triVerts.data[2] = f2-f3
    triVerts.data[4] = f2-f3
    
    var paddle2 : object::gameObject
    paddle2.construct(&s)
    paddle2.setPos(triVerts)
    paddle2.setColor(f1,f1,f2)

    //Game Loop!!!
    while(!done) {
        listener.poll(&done)
        
        paddle1.render()
        paddle2.render()

        sdl2::gl_swapwindow(win.screen)
    }
    
    io::println("Time to clean up!!")

    win.destroy()
    
    io::println("All done. It Worked!!!!!")
    return 0
} 

/*
fun drawTriangles(f1 : float, f2 : float, f3 : float) {
    gl::begin()
    gl::color3f(f2,f1,f1)
    gl::vertex3f(-f2,f1,f1)
    gl::color3f(f1,f2,f1)
    gl::vertex3f(f2,f1,f1)
    gl::color3f(f1,f1,f2)
    gl::vertex3f(f3,f3,f1)
    gl::end()
    return
}
*/
